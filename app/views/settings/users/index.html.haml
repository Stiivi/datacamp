.legacy
  .clearfix
    %h1.fl
      = t("settings.users.users")
      = link_to t("settings.users.download_csv"), settings_users_path(:format => "csv")

    .buttons.clearfix.fr
      =link_to "<span>Watchers</span>".html_safe, watchers_path, :class => "button"
      =link_to "<span>New User</span>".html_safe, new_settings_user_path, :class => "button"

  = form_tag settings_users_path, :method => "get" do
    %table
      %tr
        %th= t("settings.users.login")
        %th= t("settings.users.name")
        %th= t("settings.users.email")
        %th= t("settings.users.api_access")
        %th &nbsp;
      
      %tr.filter
        %td= text_field_tag "filters[login]", @filters[:login]
        %td= text_field_tag "filters[name]", @filters[:name]
        %td= text_field_tag "filters[email]", @filters[:email]
        %td
          = select_tag "filters[api_access_level]", options_for_select([[t("settings.users.api_all"), ""]] + accessable_options_for_select, @filters[:api_access_level])
        %td
          %a.fr.proceed.submit_form{:href => "#"}= "proceed"
          - if @filters.present?
            %a.fr.delete{:href => settings_users_path}= "reset"
      
      - @users.each do |user|
        %tr{:id => dom_id(user)}
          %td
            - if user.is_super_user
              = link_to(user.login, edit_settings_user_path(user), :class => "tooltip em", :name => t("settings.users.super_user"))
            - else
              = link_to(user.login, edit_settings_user_path(user))

          %td= user.name
          %td= user.email
          %td
            = image_tag("accessable_level_#{accessable_level_name_for_level(user.api_access_level)}.png", :class => "tooltip", :alt => t("api.levels.#{accessable_level_name_for_level(user.api_access_level)}"))
          %td.actions
            .actions
              =link_to(image_tag('icons/trash.gif'), settings_user_path(user), :title => t("global.delete"), :confirm => 'Are you sure you want to delete this item?', :method => 'delete')
              
    .box
      = will_paginate @records, :previous_label => t("global.previous"), :next_label => t("global.next")
